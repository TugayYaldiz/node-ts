variables:
  npm_config_cache: node_modules

trigger:
- develop

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '13.x'
  displayName: 'Install Node.js'

# - task: Cache@2
#   inputs:
#     key: 'npm | "$(Agent.OS)" | package-lock.json'
#     restoreKeys: |
#       npm | "$(Agent.OS)"
#       npm
#     path: $(npm_config_cache)
#     cacheHitVar: 'CacheRestored'
#   displayName: Cache npm

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      npm install
  displayName: 'Install packages'
  condition: ne(variables['CacheRestored'], 'true')

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      npm run test:coverage
  displayName: 'Run tests'
  continueOnError: false

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      npm run build
  displayName: 'Build'

- task: CopyFiles@2
  inputs:
    contents: 'dist/**'
    targetFolder: $(Build.ArtifactStagingDirectory)

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)
    artifactName: Build

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/junit-test-report.xml'
    mergeTestResults: true
    testRunTitle: 'Test results'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'
    failIfCoverageEmpty: true